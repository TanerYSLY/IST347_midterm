file_path <- "C:\Users\Admin\Documents\IstAnaliz"
file_path <- "C:/Users/Admin/Documents/IstAnaliz"
file_path <- "C:/Users/Admin/Documents/IstAnaliz.txt"
file_path <- "C:/Users/Admin/Documents/arasinav.txt"
veri_kitle <- read.table(file_path, header = TRUE, sep = " ")
file_path <- "C:/Users/Admin/Documents/arasinav.txt"
rm(file_path)
arasinav <- read_table("arasinav.txt")
arasinav <- read_table("arasinav.txt")
arasinav <- read_table("arasinav.txt")
library(readr)
arasinav <- read_table("arasinav.txt")
View(arasinav)
library(readr)
arasinav <- read_table("arasinav.txt")
rm(arasinav)
library(readr)
arasinav <- read_table("arasinav.txt")
View(arasinav)
veri_kitle <- read.table("arasinav.txt", header = TRUE, sep = " ")
rm(arasinav)
View(veri_kitle)
set.seed(123)  # Rastgelelik sabitlemek için
satir_no <- sample(1:nrow(veri_kitle),size = 2000)
veri_orneklem <- veri_kitle[satir_no,]
View(veri_orneklem)
veri_orneklem2 <- read.table("veri_orneklem.txt", header = TRUE, sep = " ")
View(veri_orneklem2)
rm(veri_orneklem2)
###############BÖLÜM 9.1################
summary(veri_orneklem)
hist(veri_orneklem$Income)
hist(veri_orneklem$Age)
hist(veri_orneklem$Dependents)
plot(veri_orneklem$Dependents)
barplot(veri_orneklem$Dependents)
barplot(names=veri_orneklem$Dependents)
barplot(height=veri_orneklem,names=veri_orneklem$Dependents)
barplot(height=veri_orneklem$Income,names=veri_orneklem$Dependents)
barplot(height=veri_orneklem$Dependents,names=veri_orneklem$Dependents)
barplot(height=table(veri_orneklem$Dependents),names=veri_orneklem$Dependents)
barplot(height=table(veri_orneklem$Dependents))
colnames(veri_orneklem)
for(col in colnames(veri_orneklem)){
for(col in colnames(veri_orneklem)){
for(colx in colnames(veri_orneklem)){
for(colx in colnames(veri_orneklem)){
if(veri_orneklem.is.numeric(colx){
for(colx in colnames(veri_orneklem)){
if(veri_orneklem.is.numeric(colx){
for(colx in colnames(veri_orneklem)){
if(veri_orneklem.is.numeric(colx == TRUE){
for(colx in colnames(veri_orneklem)){
if(veri_orneklem.is.numeric(colx)){
print("true")
}
}
rm(colx)
for(col in colnames(veri_orneklem)){
if(is.numeric(veri_orneklem$col)){
print("true")
}
}
rm(col)
names(veri_orneklem)
colnames(veri_orneklem)
for(col in names(veri_orneklem)){
if(is.numeric(veri_orneklem$col)){
print("true")
}
}
rm(col)
colnames(veri_orneklem)[1]
veri_orneklem$colnames(veri_orneklem)[1]
(veri_orneklem[col])
(veri_orneklem["income"])
(veri_orneklem["Income"])
for(col in names(veri_orneklem)){
if(is.numeric(veri_orneklem[col])){
print("true")
}
}
rm(col)
for(col in names(veri_orneklem)){
if(is.numeric(veri_orneklem[col])){
print("true")
}
}
for(col in names(veri_orneklem)){
if(is.numeric(veri_orneklem[col])){
print("true")
}
print("true")
}
for(col in names(veri_orneklem)){
if(is.numeric(veri_orneklem[col])){
print("true")
}
}
for(col in names(veri_orneklem)){
if(is.numeric(veri_orneklem[col])==TRUE){
print("true")
}
}
for(col in names(veri_orneklem)){
if(is.numeric(veri_orneklem[[col]])){
print("true")
}
}
veri_orneklem[[col]]
veri_orneklem[col]
for(col in names(veri_orneklem)){
if(is.numeric(veri_orneklem[[col]])){
print("true")
}
}
mean(veri_orneklem["Income"]
mean(veri_orneklem["Income"]
mean(veri_orneklem["Income"])
mean(veri_orneklem[["Income"]])
summary(veri_orneklem)
mean(veri_orneklem$Income)
print(col)
for(col in names(veri_orneklem)){
if(is.numeric(veri_orneklem[[col]])){ # $,[],[[]] farkı...
if(mean(veri_orneklem[[col]]) > median(veri_orneklem[[col]])){
print(col)
}
}
}
for(col in names(veri_orneklem)){
if(is.numeric(veri_orneklem[[col]])){ # $,[],[[]] farkı...
if(mean(veri_orneklem[[col]]) > median(veri_orneklem[[col]])){
print(col,"sağa çarpık")
}
}
}
print(paste(col,"sağa çarpık",col))
print(paste(col,"sağa çarpık"))
for(col in names(veri_orneklem)){
if(is.numeric(veri_orneklem[[col]])){ # $,[],[[]] farkı...
if(mean(veri_orneklem[[col]]) > median(veri_orneklem[[col]])){
print(paste(col,"sağa çarpık"))
}
if(mean(veri_orneklem[[col]]) < median(veri_orneklem[[col]])){
print(paste(col,"sola çarpık"))
}
}
}
hist(veri_orneklem$Income)
summary(veri_orneklem$Income)
# Çeyreklik değerleri hesaplama
quantile(veri_orneklem$Income, 0.30)
quantile(veri_orneklem$Income)
scale(veri_orneklem)
scale(veri_orneklem$Income)
scale(veri_orneklem$Income)[500]
scale(as.data.frame(veri_orneklem))
scale(as.data.frame(veri_orneklem[is.numeric(veri_orneklem)]))
scale(veri_orneklem$Income)
for(col in names(veri_orneklem)){
if(is.numeric(veri_orneklem[[col]])){
t.test(veri_orneklem[[col]])
}
}
for(col in names(veri_orneklem)){
if(is.numeric(veri_orneklem[[col]])){
t.test(veri_orneklem[[col]])
}
}
t.test(veri_orneklem[col])
for(col in names(veri_orneklem)){
if(is.numeric(veri_orneklem[[col]])){
t.test(veri_orneklem[col])
}
}
for(col in names(veri_orneklem)){
if(is.numeric(veri_orneklem[[col]])){
t.test(veri_orneklem[col])
}
}
for(col in names(veri_orneklem)){
for(col in names(veri_orneklem)){
if(is.numeric(veri_orneklem[[col]])){
t.test(veri_orneklem[[col])
for(col in names(veri_orneklem)){
if(is.numeric(veri_orneklem[[col]])){
t.test(veri_orneklem[[col]])
}
}
t.test(veri_orneklem)
t.test(veri_orneklem$Income)
t.test(veri_orneklem[Income])
t.test(veri_orneklem[Income])
t.test(veri_orneklem['Income'])
t.test(veri_orneklem[col])
for(col in names(veri_orneklem)){
if(is.numeric(veri_orneklem[[col]])){
t.test(veri_orneklem[col])
}
}
for(col in names(veri_orneklem)){
if(is.numeric(veri_orneklem[[col]])){
t.test(veri_orneklem[col])
}
}
for(col in names(veri_orneklem)){
if(is.numeric(veri_orneklem[[col]])){
t.test(veri_orneklem[[col]])
}
}
for(col in names(veri_orneklem)){
if(is.numeric(veri_orneklem[[col]])){
ortalama_ga = t.test(veri_orneklem[[col]])
print(ortalama_ga)
}
}
for(col in names(veri_orneklem)){
if(is.numeric(veri_orneklem[[col]])){
ortalama_ga = t.test(veri_orneklem[[col]])
print(paste(col," için güven aralığı"))
print(ortalama_ga)
}
}
for(col in names(veri_orneklem)){
if(is.numeric(veri_orneklem[[col]])){
ortalama_ga = t.test(veri_orneklem[[col]])
print(paste(col,"değişkeninin ortalama için güven aralığı"))
print(ortalama_ga)
}
}
mean(veri_orneklem$Miscellaneous)
t.test(veri_orneklem$Income, conf.level = 0.99)
for(col in names(veri_orneklem)){
if(is.numeric(veri_orneklem[[col]])){
medyan_ga = wilcox.test(veri_orneklem[[col]],conf.int = TRUE)
print(paste(col,"değişkeninin medyan için güven aralığı"))
print(medyan_ga)
}
}
veri_orneklem['Loan_Repayment'>0]
veri_orneklem['Loan_Repayment']>0
sum(veri_orneklem['Loan_Repayment']>0)
sum(veri_orneklem['Loan_Repayment']<0)
sum(veri_orneklem['Loan_Repayment']=0)
sum(veri_orneklem['Loan_Repayment']>=0)
sum(veri_orneklem['Loan_Repayment']==0)
x = sum(veri_orneklem['Loan_Repayment']>0)
x <- sum(veri_orneklem['Loan_Repayment']>0)
x <- sum(veri_orneklem['Loan_Repayment']>0)
x = sum(veri_orneklem['Loan_Repayment']>0)
length(veri_orneklem)
n = nrow(veri_orneklem)
# Fonksiyonumuza girdi olarak örneklem büyüklüğü, başarı sayısı bu durumda borç ödemek
prop.test(x,n,0.6, alternative = 'greater')
prop.test(x,n,0.5, alternative = 'greater')
sum(veri_kitle['Loan_Repayment']>0)
prop.test(x,n,0.5, alternative = 'less')
prop.test(x,n,0.5, alternative = 'greater')
# Aynı sonuçları alabilmek için bir seed belirleyelim.
set.seed(42)
# Test etmek için bir normal dağılım oluşturalım.
z <- rnorm(2000)
set.seed(123)
# Test etmek için bir normal dağılım oluşturalım.
z <- rnorm(2000)
# ks.test fonksiyonu ile testimizi gerçekleştirebiliriz.
# Girdi olarak karşılaştırmak istediğimiz dağılımları giriyoruz.
# Çıktı
ks.test(veri_orneklem$Age,z)
hist(veri_orneklem$Age,z)
hist(veri_orneklem$Age)
hist(veri_kitle$Age)
qqline(veri_kitle$Age)
qqnormal(veri_kitle$Age)
qqnorm(veri_kitle$Age)
qqline(veri_kitle$Age)
# ks.test fonksiyonu ile testimizi gerçekleştirebiliriz.
# Girdi olarak karşılaştırmak istediğimiz dağılımları giriyoruz.
# Çıktı
ks.test(veri_orneklem$Age,z)
